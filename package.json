{
  "name": "export-to-llm-gitingest",
  "displayName": "Export to LLM Gitingest",
  "description": "Analyze and export codebases to LLM-friendly formats. Supports local directories and Git repositories with smart filtering and Markdown output.",
  "version": "1.0.1",
  "publisher": "lakpahana",
  "private": false,
  "license": "MIT",
  "engines": {
    "vscode": "^1.98.0"
  },
  "categories": [
    "Other",
    "Programming Languages",
    "SCM Providers"
  ],
  "keywords": [
    "git",
    "llm",
    "codebase",
    "analysis",
    "export"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/gitingest/export-to-llm-gitingest.git"
  },
  "bugs": {
    "url": "https://github.com/gitingest/export-to-llm-gitingest/issues"
  },
  "homepage": "https://github.com/gitingest/export-to-llm-gitingest#readme",
  "icon": "resources/icon.png",
  "galleryBanner": {
    "color": "#C80000",
    "theme": "dark"
  },
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "gitingest.ingestLocal",
        "title": "Gitingest: Ingest Local Directory"
      },
      {
        "command": "gitingest.ingestGit",
        "title": "Gitingest: Ingest Git Repository"
      }
    ],
    "configuration": {
      "title": "Gitingest",
      "properties": {
        "gitingest.maxFileSize": {
          "type": "number",
          "default": 1048576,
          "description": "Maximum file size in bytes to process (default: 1MB)"
        },
        "gitingest.ignorePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "**/.git/**",
            "**/node_modules/**",
            "**/__pycache__/**"
          ],
          "description": "Glob patterns to ignore during ingestion"
        },
        "gitingest.includePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Glob patterns to include during ingestion (overrides ignore patterns)"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.98.0",
    "@typescript-eslint/eslint-plugin": "^8.25.0",
    "@typescript-eslint/parser": "^8.25.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.21.0",
    "ts-loader": "^9.5.2",
    "typescript": "^5.7.3",
    "webpack": "^5.98.0",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "@iarna/toml": "^2.2.5",
    "commander": "^13.1.0",
    "rimraf": "^6.0.1",
    "simple-git": "^3.22.0",
    "uuid": "^11.1.0"
  }
}